#!/bin/bash

input=input
parallel=1
path=`pwd`
# prepare receptor

####skip pdb4amber need Amber
####pdb4amber -i $1/receptor.pdb -o $1/receptor_delh.pdb -y -d
####pdb4amber --reduce --no-reduce-db -i $1/receptor_delh.pdb -o $1/receptor_addh.pdb
cp $input/receptor.pdb $input/receptor_addh.pdb

#get pdbqt  need ADT
#change to adt python
prepare_receptor4.py  -r $input/receptor_addh.pdb -o $input/receptor.pdbqt -A bonds_hydrogens -U nphs_lps_waters_deleteAltB
/orange/yaxia.yuan/software/MGLTools-1.5.6/mgltools_x86_64Linux2_1.5.6/bin/pythonsh /orange/yaxia.yuan/software/MGLTools-1.5.6/mgltools_x86_64Linux2_1.5.6/MGLToolsPckgs/AutoDockTools/Utilities24/prepare_receptor4.py  -r $input/receptor_addh.pdb -o $input/receptor.pdbqt -A bonds_hydrogens -U nphs_lps_waters_deleteAltB

#fixmetal
sed -i '{s/0\.000 Ca/2.000 Ca/}' $input/receptor.pdbqt
sed -i '{s/0\.000 Mg/2.000 Mg/}' $input/receptor.pdbqt
sed -i '{s/0\.000 Zn/2.000 Zn/}' $input/receptor.pdbqt
sed -i '{s/0\.000 Na/1.000 Na/}' $input/receptor.pdbqt

babel -h $input/receptor.pdb  $input/receptor_addh.mol2
xscore  -fixpdb $input/receptor_addh.pdb $input/receptor_addh_xscore.pdb
#prepare conf
#echo "receptor=receptor.pdbqt" >$input/vina.conf
#center_mol2 $1/crystal_ligand.mol2  |awk '{if(i==0){x=$3;y=$5;z=$7;i++}else {dx=$3;dy=$5;dz=$7}} END {print "center_x="x"\ncenter_y="y"\ncenter_z="z"\nsize_x="int(dx+15)"\nsize_y="int(dy+15)"\nsize_z="int(dz+15)"\nnum_modes=1\nenergy_range=10\ncpu=1"}' >>$1/vina.conf

# prepare ligand
mkdir $input/ligand
mkdir $input/ligand_ori
mkdir $input/docked
babel -m $input/input.sdf $input/ligand_ori/ligand_.sdf
ls $input/ligand_ori |parallel -j $parallel babel $input/ligand_ori/{} $input/ligand/{.}.pdbqt
ls $input/ligand_ori |parallel -j $parallel babel $input/ligand_ori/{} $input/docked/{.}.mol2
cp $input/docked/ligand_1.mol2 $input/refer.mol2
ls $input/ligand_ori/ |sed '{s/\.sdf//}'  >$input/ligand_ori.list


#cavity
sed '{s/DIRECTORY/'$input'/g}' cavity_temp.input >$input/cavity.input
cd LigBuilderV3/build
./cavity ../../$input/cavity.input
cd $path

#ligbuilder
#prepare list
ls $input/docked |awk '{print "'$path'/'$input'/docked/"$1}' >$input/ligbuilder.list
sed '{s/DIRECTORY/'$input'/g}' build_temp.input >$input/build.input
cd LigBuilderV3/build
./build_dyscore -Score ../../$input/build.input
cd $path

#vina
./run_vina $input $parallel
#DSXscore
./run_DSXscore $input $parallel
#NNscore
./run_NNscore $input $parallel
#rf-score3
./run_rf-score3 $input $parallel
#score2
./run_score2 $input $parallel
#xscore
./run_xscore $input $parallel

#final
./collect_dup.py $input
